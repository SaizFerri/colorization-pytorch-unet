cwlVersion: "v1.0"
class: "CommandLineTool"
baseCommand: "main.py"
doc: "Train a U-Net for image colorization."

inputs:
  data_dir:
    type: "Directory"
    inputBinding:
      position: 0
    doc: "Data: Path to read-only directory containing image files."
  saved_model_dir:
    type: "Directory?"
    inputBinding:
      prefix: "--saved-model-dir"
    doc: "Data: Path of dir of last saved model"
  saved_model_file:
    type: "string?"
    inputBinding:
      prefix: "--saved-model-file"
    doc: "Data: File of last saved model"
  checkpoints_dir:
    type: "Directory"
    inputBinding:
      prefix: "--checkpoints-dir"
    doc: "Data: Path to writable directory for the checkpoint files"
  learning_rate:
    type: "float?"
    inputBinding:
      prefix: "--learning-rate"
    doc: "Training: Learning rate. Default: 0.001"
  model_divider:
    type: "int?"
    inputBinding:
      prefix: "--model-divider"
    doc: "Model divider to divide number of the filters in the conv layers. Default 1."
  batch_size:
    type: "int?"
    inputBinding:
      prefix: "--batch-size"
    doc: "Training: Batch size. Default: 64"
  num_bins:
    type: "int?"
    inputBinding:
      prefix: "--num-bins"
    doc: "Training: Number of bins. Default: 36"
  from_epoch:
    type: "int?"
    inputBinding:
      prefix: "--from-epoch"
    doc: "Training: From epoch. Default: 0"
  num_epochs:
    type: "int?"
    inputBinding:
      prefix: "--num-epochs"
    doc: "Training: Number of epochs. Default: 100"
  log_dir:
    type: "Directory?"
    inputBinding:
      prefix: "--log-dir"
    doc: "Debug: Path to writable directory for a log file to be created. Default: log to stdout / stderr"
  log_file_name:
    type: "string?"
    inputBinding:
      prefix: "--log-file-name"
    doc: "Debug: Name of the log file, generated when --log-dir is set. Default: training.csv"
  temperature:
    type: "float?"
    inputBinding:
      prefix: "--temperature"
    doc: "Temperature parameter: Default: 1"
  seed:
    type: "int?"
    inputBinding:
      prefix: "--seed"
    doc: "Seed for the visualisation. Default: None"

outputs:
  weights_file:
    type: "File?"
    outputBinding:
      glob: "colorization-argumented/checkpoints/model.pth"
    doc: "CNN model weights in PTH format."